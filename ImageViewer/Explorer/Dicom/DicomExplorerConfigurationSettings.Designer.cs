
#region License

// Copyright (c) 2013, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This file is part of the ClearCanvas RIS/PACS open source project.
//
// The ClearCanvas RIS/PACS open source project is free software: you can
// redistribute it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// The ClearCanvas RIS/PACS open source project is distributed in the hope that it
// will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// the ClearCanvas RIS/PACS open source project.  If not, see
// <http://www.gnu.org/licenses/>.

#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Macro.ImageViewer.Explorer.Dicom {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class DicomExplorerConfigurationSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static DicomExplorerConfigurationSettings defaultInstance = ((DicomExplorerConfigurationSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new DicomExplorerConfigurationSettings())));
        
        public static DicomExplorerConfigurationSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// Separator character for Name search field in DICOM Explorer.  Used to distinguish a first/last name search from an &quot;open&quot; name search.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Separator character for Name search field in DICOM Explorer.  Used to distinguish" +
            " a first/last name search from an \"open\" name search.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(",")]
        public char NameSeparator {
            get {
                return ((char)(this["NameSeparator"]));
            }
        }
        
        /// <summary>
        /// Specifies whether or not to select the default server (or server group) when the DICOM Explorer is first launched.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Specifies whether or not to select the default server (or server group) when the " +
            "DICOM Explorer is first launched.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SelectDefaultServerOnStartup {
            get {
                return ((bool)(this["SelectDefaultServerOnStartup"]));
            }
            set {
                this["SelectDefaultServerOnStartup"] = value;
            }
        }
        
        /// <summary>
        /// Configures the columns displayed in the study browser results table
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Configures the columns displayed in the study browser results table")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SearchResultColumnOptionDefault.xml")]
        public global::Macro.ImageViewer.Explorer.Dicom.SearchResultColumnOptionCollection ResultColumns {
            get {
                return ((global::Macro.ImageViewer.Explorer.Dicom.SearchResultColumnOptionCollection)(this["ResultColumns"]));
            }
            set {
                this["ResultColumns"] = value;
            }
        }
    }
}
